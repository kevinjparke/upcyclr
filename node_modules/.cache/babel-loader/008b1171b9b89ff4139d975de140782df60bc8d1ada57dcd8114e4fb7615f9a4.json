{"ast":null,"code":"var _jsxFileName = \"/Users/kevinparke/Documents/Web Development/upcyclr/src/components/reward-system/redeemed-rewards.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport { AppContext } from '../../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const RedeemedRewards = () => {\n  _s();\n  const {\n    rewards\n  } = useContext(AppContext); // Access the rewards array from context\n\n  // Filter the rewards array to include only redeemed rewards\n  const redeemedRewards = rewards.filter(reward => reward.isRedeemed);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: redeemedRewards.map(reward => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: reward.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: reward.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this)]\n    }, reward.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_s(RedeemedRewards, \"tJuXq8nXj7hbMw4MwNpPifN0CEA=\");\n_c = RedeemedRewards;\nvar _c;\n$RefreshReg$(_c, \"RedeemedRewards\");","map":{"version":3,"names":["React","useContext","AppContext","jsxDEV","_jsxDEV","RedeemedRewards","_s","rewards","redeemedRewards","filter","reward","isRedeemed","children","map","title","fileName","_jsxFileName","lineNumber","columnNumber","description","id","_c","$RefreshReg$"],"sources":["/Users/kevinparke/Documents/Web Development/upcyclr/src/components/reward-system/redeemed-rewards.js"],"sourcesContent":["import React, { useContext } from 'react';\nimport { AppContext } from '../../App';\n\nexport const RedeemedRewards = () => {\n  const { rewards } = useContext(AppContext); // Access the rewards array from context\n\n  // Filter the rewards array to include only redeemed rewards\n  const redeemedRewards = rewards.filter((reward) => reward.isRedeemed);\n\n  return (\n    <div>\n      {redeemedRewards.map((reward) => (\n        <div key={reward.id}>\n          <h3>{reward.title}</h3>\n          <p>{reward.description}</p>\n        </div>\n      ))}\n    </div>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,UAAU,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,OAAO,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnC,MAAM;IAAEC;EAAQ,CAAC,GAAGN,UAAU,CAACC,UAAU,CAAC,CAAC,CAAC;;EAE5C;EACA,MAAMM,eAAe,GAAGD,OAAO,CAACE,MAAM,CAAEC,MAAM,IAAKA,MAAM,CAACC,UAAU,CAAC;EAErE,oBACEP,OAAA;IAAAQ,QAAA,EACGJ,eAAe,CAACK,GAAG,CAAEH,MAAM,iBAC1BN,OAAA;MAAAQ,QAAA,gBACER,OAAA;QAAAQ,QAAA,EAAKF,MAAM,CAACI;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACvBd,OAAA;QAAAQ,QAAA,EAAIF,MAAM,CAACS;MAAW;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA,GAFnBR,MAAM,CAACU,EAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGd,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACZ,EAAA,CAhBWD,eAAe;AAAAgB,EAAA,GAAfhB,eAAe;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}