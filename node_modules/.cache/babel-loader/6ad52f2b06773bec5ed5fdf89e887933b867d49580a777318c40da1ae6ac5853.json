{"ast":null,"code":"var _jsxFileName = \"/Users/kevinparke/Documents/Web Development/upcyclr/src/Admin/PickUpRequests.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Container, Typography, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Select, MenuItem, Button, Paper, TextField } from \"@mui/material\";\nimport { styled } from \"@mui/material/styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContainerWrapper = styled(Container)({\n  width: \"100%\",\n  paddingTop: \"16px\",\n  // You can adjust the padding value as needed\n  margin: 0\n});\n_c = ContainerWrapper;\nconst TableWrapper = styled(TableContainer)(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    width: \"1400px\",\n    marginBottom: theme.spacing(2),\n    // You can adjust the margin value as needed\n    marginTop: theme.spacing(2),\n    // Reduce the top margin\n    \"& table\": {\n      tableLayout: \"fixed\" // Set the tabl  \n    }\n  };\n});\n_c2 = TableWrapper;\nconst ActionButtonsWrapper = styled(TableCell)(_ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return {\n    \"& > *\": {\n      margin: theme.spacing(0.5) // Reduce the margin on the buttons\n    },\n\n    padding: theme.spacing(1) // Add padding to prevent buttons from disappearing\n  };\n});\n_c3 = ActionButtonsWrapper;\nconst statuses = [\"In-Progress\", \"PickUp-Scheduled\", \"Complete\"];\nconst PickUpRequests = () => {\n  _s();\n  const [newItem, setNewItem] = useState({\n    type: \"\",\n    weight: \"\",\n    unit: \"\"\n  });\n  const [editedReward, setEditedReward] = useState(\"\");\n  const [items, setItems] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [editingItemId, setEditingItemId] = useState(null);\n  // const [items, setItems] = useState([\n  //   {\n  //     id: \"1\",\n  //     user_id: \"aaljsdljf\",\n  //     user_name: \"Falgun\",\n  //     user_address: \"1333 South Park Street\",\n  //     pickup_date: \"2023-07-28\",\n  //     pickup_time: \"5:00 pm - 6:00 pm\",\n  //     pickup_by: \"Ronil\",\n  //     status: \"PickUp Scheduled\",\n  //     reward: \"0\",\n  //     items_in_bag: [\n\n  //     ],\n  //   },\n  //   {\n  //     id: \"2\",\n  //     user_id: \"aasdfljlkj\",\n  //     user_name: \"John\",\n  //     user_address: \"456 Oak Avenue\",\n  //     pickup_date: \"2023-07-29\",\n  //     pickup_time: \"3:00 pm - 4:00 pm\",\n  //     pickup_by: \"Alice\",\n  //     status: \"In-Progress\",\n  //     reward: \"10\",\n  //     items_in_bag: [\n\n  //     ],\n  //   },\n  // ]);\n\n  const fetchItems = async () => {\n    try {\n      const response = await fetch(\"https://fratlvuuxh.execute-api.us-east-1.amazonaws.com/default/AdminPickUpRequest\"); // Replace with your API endpoint\n      const data = await response.json();\n      setItems(data.Items);\n      // Update the items state with the fetched data\n      setLoading(false); // Set loading to false once data is fetched\n    } catch (error) {\n      console.error(\"Error fetching items:\", error);\n      setLoading(false); // Set loading to false in case of an error\n    }\n  };\n\n  useEffect(() => {\n    fetchItems(); // Fetch items when the component mounts\n  }, []);\n  console.log(items);\n  const handleStatusChange = (itemId, newStatus) => {\n    const updatedItems = items.map(item => item.id === itemId ? {\n      ...item,\n      request_status: newStatus\n    } : item);\n    console.log(updatedItems);\n    setItems(updatedItems);\n  };\n  const handleBagItemChange = (itemId, index, field, value) => {\n    setItems(prevItems => {\n      const updatedItems = prevItems.map(item => {\n        if (item.id === itemId) {\n          const updatedBagItems = item.items_in_bag.map((bagItem, bagIndex) => bagIndex === index ? {\n            ...bagItem,\n            [field]: value\n          } : bagItem);\n          return {\n            ...item,\n            items_in_bag: updatedBagItems\n          };\n        } else {\n          return item;\n        }\n      });\n      return updatedItems;\n    });\n  };\n  const handleEdit = itemId => {\n    setEditingItemId(itemId);\n  };\n  const handleRewardChange = (itemId, newReward) => {\n    setItems(prevItems => {\n      const updatedItems = prevItems.map(item => item.id === itemId ? {\n        ...item,\n        reward: newReward\n      } : item);\n      return updatedItems;\n    });\n  };\n  const sendUpdatedItems = async updatedItem => {\n    try {\n      const response = await fetch(\"https://fratlvuuxh.execute-api.us-east-1.amazonaws.com/default/AdminPickUpRequest \", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(updatedItem)\n      });\n\n      // Check if the request was successful\n      if (!response.ok) {\n        throw new Error(\"Error saving data\");\n      }\n\n      // If successful, you can handle the response here\n      // For example, show a success message or perform additional actions\n      console.log(\"Data saved successfully!\");\n    } catch (error) {\n      console.error(\"Error sending data:\", error);\n      // Handle error (e.g., show an error message to the user)\n    }\n  };\n\n  const handleSave = () => {\n    let updateItem;\n    setItems(prevItems => {\n      return prevItems.map(item => {\n        if (item.id === editingItemId) {\n          updateItem = item;\n          return {\n            ...item,\n            reward: editedReward !== \"\" ? editedReward : item.reward\n          };\n        } else {\n          return item;\n        }\n      });\n    });\n    setEditedReward(\"\");\n    setEditingItemId(null); // Disable editing mode\n    sendUpdatedItems(updateItem);\n  };\n  const handleAddNewItem = () => {\n    setItems(prevItems => {\n      const updatedItems = prevItems.map(item => {\n        if (item.id === editingItemId) {\n          return {\n            ...item,\n            items_in_bag: [...item.items_in_bag, newItem]\n          };\n        } else {\n          return item;\n        }\n      });\n      setNewItem({\n        type: \"\",\n        weight: \"\",\n        unit: \"\"\n      }); // Reset newItem state\n      return updatedItems;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(ContainerWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Pick Up Requests\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableWrapper, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"User Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"User Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Pickup Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Pickup Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Pickup By\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              width: \"250px\",\n              children: \"Items in Bag\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Reward\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this), loading ? /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 7\n        }, this) : /*#__PURE__*/_jsxDEV(TableBody, {\n          children: items.map(item => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: item.user.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: item.pickup_address.street\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: item.pickup_start_ts\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: item.pickup_end_ts\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: editingItemId === item.id ? /*#__PURE__*/_jsxDEV(TextField, {\n                type: \"text\",\n                value: item.pickup_by,\n                onChange: e => handleStatusChange(item.id, e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 21\n              }, this) : item.pickup_by\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: editingItemId === item.id ? /*#__PURE__*/_jsxDEV(Table, {\n                children: /*#__PURE__*/_jsxDEV(TableBody, {\n                  children: [item.items_in_bag.map((bagItem, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n                    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                      children: /*#__PURE__*/_jsxDEV(TextField, {\n                        value: bagItem.type,\n                        onChange: e => handleBagItemChange(item.id, index, \"type\", e.target.value)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 248,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 247,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: /*#__PURE__*/_jsxDEV(TextField, {\n                        value: bagItem.weight,\n                        onChange: e => handleBagItemChange(item.id, index, \"weight\", e.target.value)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 256,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 255,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: /*#__PURE__*/_jsxDEV(TextField, {\n                        value: bagItem.unit,\n                        onChange: e => handleBagItemChange(item.id, index, \"unit\", e.target.value)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 264,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 263,\n                      columnNumber: 25\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 246,\n                    columnNumber: 23\n                  }, this)), /*#__PURE__*/_jsxDEV(TableRow, {\n                    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                      children: /*#__PURE__*/_jsxDEV(TextField, {\n                        value: newItem.type // <- Make sure to include these values\n                        ,\n                        onChange: e => setNewItem({\n                          ...newItem,\n                          type: e.target.value\n                        })\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 277,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 276,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: /*#__PURE__*/_jsxDEV(TextField, {\n                        value: newItem.weight // <- Make sure to include these values\n                        ,\n                        onChange: e => setNewItem({\n                          ...newItem,\n                          weight: e.target.value\n                        })\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 283,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 282,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: /*#__PURE__*/_jsxDEV(TextField, {\n                        value: newItem.unit // <- Make sure to include these values\n                        ,\n                        onChange: e => setNewItem({\n                          ...newItem,\n                          unit: e.target.value\n                        })\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 289,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 288,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 275,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n                    children: /*#__PURE__*/_jsxDEV(TableCell, {\n                      colSpan: 3,\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        variant: \"contained\",\n                        color: \"primary\",\n                        onClick: handleAddNewItem,\n                        children: \"Add Item\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 299,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 298,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 297,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 17\n              }, this) :\n              /*#__PURE__*/\n              // Display items in bag\n              _jsxDEV(Table, {\n                children: /*#__PURE__*/_jsxDEV(TableBody, {\n                  children: item.items_in_bag.map((bagItem, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n                    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                      children: bagItem.type\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 319,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: bagItem.weight\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 320,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: bagItem.unit\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 321,\n                      columnNumber: 29\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 318,\n                    columnNumber: 27\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 316,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: editingItemId === item.id ? /*#__PURE__*/_jsxDEV(Select, {\n                value: item.request_status,\n                onChange: e => handleStatusChange(item.id, e.target.value),\n                children: statuses.map(status => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: status,\n                  children: status\n                }, status, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 335,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 21\n              }, this) : item.request_status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: editingItemId === item.id ?\n              /*#__PURE__*/\n              // Show text input in edit mode\n              _jsxDEV(TextField, {\n                type: \"text\",\n                value: item.reward,\n                onChange: e => handleRewardChange(item.id, e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 15\n              }, this) :\n              // Display reward value in non-edit mode\n              item.reward\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ActionButtonsWrapper, {\n              children: editingItemId === item.id ? /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                onClick: handleSave,\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                onClick: () => handleEdit(item.id),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 17\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 195,\n    columnNumber: 5\n  }, this);\n};\n_s(PickUpRequests, \"kBaMNiS5JGQTfkyvleWjF3Y4Nvo=\");\n_c4 = PickUpRequests;\nexport default PickUpRequests;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"ContainerWrapper\");\n$RefreshReg$(_c2, \"TableWrapper\");\n$RefreshReg$(_c3, \"ActionButtonsWrapper\");\n$RefreshReg$(_c4, \"PickUpRequests\");","map":{"version":3,"names":["React","useState","useEffect","Container","Typography","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Select","MenuItem","Button","Paper","TextField","styled","jsxDEV","_jsxDEV","ContainerWrapper","width","paddingTop","margin","_c","TableWrapper","_ref","theme","marginBottom","spacing","marginTop","tableLayout","_c2","ActionButtonsWrapper","_ref2","padding","_c3","statuses","PickUpRequests","_s","newItem","setNewItem","type","weight","unit","editedReward","setEditedReward","items","setItems","loading","setLoading","editingItemId","setEditingItemId","fetchItems","response","fetch","data","json","Items","error","console","log","handleStatusChange","itemId","newStatus","updatedItems","map","item","id","request_status","handleBagItemChange","index","field","value","prevItems","updatedBagItems","items_in_bag","bagItem","bagIndex","handleEdit","handleRewardChange","newReward","reward","sendUpdatedItems","updatedItem","method","headers","body","JSON","stringify","ok","Error","handleSave","updateItem","handleAddNewItem","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","component","user","name","pickup_address","street","pickup_start_ts","pickup_end_ts","pickup_by","onChange","e","target","colSpan","color","onClick","status","_c4","$RefreshReg$"],"sources":["/Users/kevinparke/Documents/Web Development/upcyclr/src/Admin/PickUpRequests.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Container,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Select,\n  MenuItem,\n  Button,\n  Paper,\n  TextField,\n} from \"@mui/material\";\nimport { styled } from \"@mui/material/styles\";\n\nconst ContainerWrapper = styled(Container)({\n  width: \"100%\",\n  paddingTop: \"16px\", // You can adjust the padding value as needed\n  margin: 0,\n});\n\nconst TableWrapper = styled(TableContainer)(({ theme }) => ({\n  width:\"1400px\",\n  marginBottom: theme.spacing(2), // You can adjust the margin value as needed\n  marginTop: theme.spacing(2), // Reduce the top margin\n  \"& table\": {\n  tableLayout: \"fixed\", // Set the tabl  \n  },\n}));\n\nconst ActionButtonsWrapper = styled(TableCell)(({ theme }) => ({\n  \"& > *\": {\n    margin: theme.spacing(0.5), // Reduce the margin on the buttons\n  },\n  padding: theme.spacing(1), // Add padding to prevent buttons from disappearing\n}));\n\nconst statuses = [\"In-Progress\", \"PickUp-Scheduled\", \"Complete\"];\n\nconst PickUpRequests = () => {\n  const [newItem, setNewItem] = useState({ type: \"\", weight: \"\", unit: \"\" });\n  const [editedReward, setEditedReward] = useState(\"\"); \n  const [items, setItems] = useState([]); \n  const [loading, setLoading] = useState(true);\n  const [editingItemId, setEditingItemId] = useState(null);\n  // const [items, setItems] = useState([\n  //   {\n  //     id: \"1\",\n  //     user_id: \"aaljsdljf\",\n  //     user_name: \"Falgun\",\n  //     user_address: \"1333 South Park Street\",\n  //     pickup_date: \"2023-07-28\",\n  //     pickup_time: \"5:00 pm - 6:00 pm\",\n  //     pickup_by: \"Ronil\",\n  //     status: \"PickUp Scheduled\",\n  //     reward: \"0\",\n  //     items_in_bag: [\n        \n  //     ],\n  //   },\n  //   {\n  //     id: \"2\",\n  //     user_id: \"aasdfljlkj\",\n  //     user_name: \"John\",\n  //     user_address: \"456 Oak Avenue\",\n  //     pickup_date: \"2023-07-29\",\n  //     pickup_time: \"3:00 pm - 4:00 pm\",\n  //     pickup_by: \"Alice\",\n  //     status: \"In-Progress\",\n  //     reward: \"10\",\n  //     items_in_bag: [\n       \n  //     ],\n  //   },\n  // ]);\n\n  \n\n  const fetchItems = async () => {\n    try {\n      const response = await fetch(\"https://fratlvuuxh.execute-api.us-east-1.amazonaws.com/default/AdminPickUpRequest\"); // Replace with your API endpoint\n      const data = await response.json();\n      setItems(data.Items);\n     // Update the items state with the fetched data\n      setLoading(false); // Set loading to false once data is fetched\n    } catch (error) {\n      console.error(\"Error fetching items:\", error);\n      setLoading(false); // Set loading to false in case of an error\n    }\n  };\n  useEffect(() => {\n    fetchItems(); // Fetch items when the component mounts\n  }, []); \n\n  console.log(items)\n\n  const handleStatusChange = (itemId, newStatus) => {\n    const updatedItems = items.map((item) =>\n      item.id === itemId ? { ...item, request_status: newStatus } : item\n    );\n    console.log(updatedItems);\n    setItems(updatedItems);\n  };\n\n  const handleBagItemChange = (itemId, index, field, value) => {\n    setItems((prevItems) => {\n      const updatedItems = prevItems.map((item) => {\n        if (item.id === itemId) {\n          const updatedBagItems = item.items_in_bag.map((bagItem, bagIndex) =>\n            bagIndex === index ? { ...bagItem, [field]: value } : bagItem\n          );\n          return { ...item, items_in_bag: updatedBagItems };\n        } else {\n          return item;\n        }\n      });\n      return updatedItems;\n    });\n  };\n\n  const handleEdit = (itemId) => {\n    setEditingItemId(itemId);\n  };\n\n  const handleRewardChange = (itemId, newReward) => {\n    setItems((prevItems) => {\n      const updatedItems = prevItems.map((item) =>\n        item.id === itemId ? { ...item, reward: newReward } : item\n      );\n      return updatedItems;\n    });\n  };\n\n  const sendUpdatedItems = async (updatedItem) => {\n    try {\n      const response = await fetch(\"https://fratlvuuxh.execute-api.us-east-1.amazonaws.com/default/AdminPickUpRequest \", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(updatedItem),\n      });\n\n      // Check if the request was successful\n      if (!response.ok) {\n        throw new Error(\"Error saving data\");\n      }\n\n      // If successful, you can handle the response here\n      // For example, show a success message or perform additional actions\n      console.log(\"Data saved successfully!\");\n    } catch (error) {\n      console.error(\"Error sending data:\", error);\n      // Handle error (e.g., show an error message to the user)\n    }\n  };\n\n  const handleSave = () => {\n    let updateItem;\n    setItems((prevItems) => {\n      return prevItems.map((item) => {\n        if (item.id === editingItemId) {\n          updateItem=item;\n          return { ...item, reward: editedReward !== \"\" ? editedReward : item.reward };\n        } else {\n          return item;\n        }\n      });\n    });\n    setEditedReward(\"\"); \n    setEditingItemId(null); // Disable editing mode\n    sendUpdatedItems(updateItem)\n  };\n\n  const handleAddNewItem = () => {\n    setItems((prevItems) => {\n      const updatedItems = prevItems.map((item) => {\n        if (item.id === editingItemId) {\n          return { ...item, items_in_bag: [...item.items_in_bag, newItem] };\n        } else {\n          return item;\n        }\n      });\n      setNewItem({ type: \"\", weight: \"\", unit: \"\" }); // Reset newItem state\n      return updatedItems;\n    });\n  };\n\n    \n\n  return (\n    <ContainerWrapper>\n      <Typography variant=\"h4\" gutterBottom>\n        Pick Up Requests\n      </Typography>\n      <TableWrapper component={Paper}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell >User Name</TableCell>\n              <TableCell >User Address</TableCell>\n              <TableCell >Pickup Date</TableCell>\n              <TableCell >Pickup Time</TableCell>\n              <TableCell >Pickup By</TableCell>\n              <TableCell width=\"250px\">Items in Bag</TableCell>\n              <TableCell >Status</TableCell>\n              <TableCell>Reward</TableCell>\n              <TableCell>Actions</TableCell>\n            </TableRow>\n          </TableHead>\n          {loading ? (\n      <Typography variant=\"h6\">Loading...</Typography>\n    ) : (\n          <TableBody>\n            {items.map((item) => (\n              <TableRow key={item.id}>\n                <TableCell>\n                    {item.user.name}\n                </TableCell>\n                <TableCell>\n                \n                    {item.pickup_address.street}\n\n                </TableCell>\n                <TableCell>{item.pickup_start_ts}</TableCell>\n                <TableCell>{item.pickup_end_ts}</TableCell>\n                <TableCell>\n                  {editingItemId === item.id ? (\n                    <TextField\n                      type=\"text\"\n                      value={item.pickup_by}\n                      onChange={(e) => handleStatusChange(item.id, e.target.value)}\n                    />\n                  ) : (\n                    item.pickup_by\n                  )}\n                </TableCell>\n              <TableCell>\n              {editingItemId === item.id ? (\n                <Table>\n                  <TableBody>\n                    {item.items_in_bag.map((bagItem, index) => (\n                      <TableRow key={index}>\n                        <TableCell>\n                          <TextField\n                            value={bagItem.type}\n                            onChange={(e) =>\n                              handleBagItemChange(item.id, index, \"type\", e.target.value)\n                            }\n                          />\n                        </TableCell>\n                        <TableCell>\n                          <TextField\n                            value={bagItem.weight}\n                            onChange={(e) =>\n                              handleBagItemChange(item.id, index, \"weight\", e.target.value)\n                            }\n                          />\n                        </TableCell>\n                        <TableCell>\n                          <TextField\n                            value={bagItem.unit}\n                            onChange={(e) =>\n                              handleBagItemChange(item.id, index, \"unit\", e.target.value)\n                            }\n                          />\n                        </TableCell>\n                      </TableRow>\n                    ))}\n\n                    {/* Step 4: Display the new item input fields when in edit mode */}\n                    <TableRow>\n                      <TableCell>\n                        <TextField\n                          value={newItem.type} // <- Make sure to include these values\n                          onChange={(e) => setNewItem({ ...newItem, type: e.target.value })}\n                        />\n                      </TableCell>\n                      <TableCell>\n                        <TextField\n                          value={newItem.weight} // <- Make sure to include these values\n                          onChange={(e) => setNewItem({ ...newItem, weight: e.target.value })}\n                        />\n                      </TableCell>\n                      <TableCell>\n                        <TextField\n                          value={newItem.unit} // <- Make sure to include these values\n                          onChange={(e) => setNewItem({ ...newItem, unit: e.target.value })}\n                        />\n                      </TableCell>\n                    </TableRow>\n\n                    {/* Step 5: Display the \"Add Item\" button */}\n                    <TableRow>\n                      <TableCell colSpan={3}>\n                        <Button variant=\"contained\" color=\"primary\" onClick={handleAddNewItem}>\n                          Add Item\n                        </Button>\n                      </TableCell>\n                    </TableRow>\n                  </TableBody>\n                </Table>\n              ) : ( \n                    // Display items in bag\n                    <Table>\n                      {/* <TableHead>\n                        <TableRow>\n                          <TableCell>Type</TableCell>\n                          <TableCell>Weight</TableCell>\n                          <TableCell>Unit</TableCell>\n                        </TableRow>\n                      </TableHead> */}\n                      <TableBody>\n                        {item.items_in_bag.map((bagItem, index) => (\n                          <TableRow key={index}>\n                            <TableCell>{bagItem.type}</TableCell>\n                            <TableCell>{bagItem.weight}</TableCell>\n                            <TableCell>{bagItem.unit}</TableCell>\n                          </TableRow>\n                        ))}\n                      </TableBody>\n                    </Table>\n                  )}\n                </TableCell>\n                <TableCell>\n                  {editingItemId === item.id ? (\n                    <Select\n                      value={item.request_status}\n                      onChange={(e) => handleStatusChange(item.id, e.target.value)}\n                    >\n                      {statuses.map((status) => (\n                        <MenuItem key={status} value={status}>\n                          {status}\n                        </MenuItem>\n                      ))}\n                    </Select>\n                  ) : (\n                    item.request_status\n                  )}\n                </TableCell>\n                <TableCell>\n            {editingItemId === item.id ? (\n              // Show text input in edit mode\n              <TextField\n                type=\"text\"\n                value={item.reward}\n                onChange={(e) => handleRewardChange(item.id, e.target.value)}\n              />\n            ) : (\n              // Display reward value in non-edit mode\n              item.reward\n            )}\n          </TableCell>\n                <ActionButtonsWrapper>\n                  {editingItemId === item.id ? (\n                    <Button variant=\"contained\" color=\"primary\" onClick={handleSave}>\n                      Save\n                    </Button>\n                  ) : (\n                    <Button variant=\"contained\" color=\"primary\" onClick={() => handleEdit(item.id)}>\n                      Edit\n                    </Button>\n                  )}\n                </ActionButtonsWrapper>\n              </TableRow>\n            ))}\n          </TableBody>)}\n        </Table>\n      </TableWrapper>\n    </ContainerWrapper>\n  );\n};\n\nexport default PickUpRequests;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}